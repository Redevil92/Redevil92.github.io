{"version":3,"file":"js/3140.8f33e93e.js","mappings":"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","sources":["webpack://my-portfolio/./node_modules/@lezer/yaml/dist/index.js","webpack://my-portfolio/./node_modules/@codemirror/lang-yaml/dist/index.js"],"sourcesContent":["import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst blockEnd = 63,\n  eof = 64,\n  DirectiveEnd = 1,\n  DocEnd = 2,\n  sequenceStartMark = 3,\n  sequenceContinueMark = 4,\n  explicitMapStartMark = 5,\n  explicitMapContinueMark = 6,\n  flowMapMark = 7,\n  mapStartMark = 65,\n  mapContinueMark = 66,\n  Literal = 8,\n  QuotedLiteral = 9,\n  Anchor = 10,\n  Alias = 11,\n  Tag = 12,\n  BlockLiteralContent = 13,\n  BracketL = 19,\n  FlowSequence = 20,\n  Colon = 29,\n  BraceL = 33,\n  FlowMapping = 34;\n\nconst type_Top = 0, type_Seq = 1, type_Map = 2, type_Flow = 3;\n\nclass Context {\n  constructor(parent, depth, type) {\n    this.parent = parent;\n    this.depth = depth;\n    this.type = type;\n    this.hash = (parent ? parent.hash + parent.hash << 8 : 0) + depth + (depth << 4) + type;\n  }\n\n  static top = new Context(null, -1, type_Top)\n}\n\nfunction findColumn(input, pos) {\n  for (let col = 0, p = pos - input.pos - 1;; p--, col++) {\n    let ch = input.peek(p);\n    if (isBreakSpace(ch) || ch == -1) return col\n  }\n}\n\nfunction isNonBreakSpace(ch) {\n  return ch == 32 || ch == 9\n}\n\nfunction isBreakSpace(ch) {\n  return ch == 10 || ch == 13\n}\n\nfunction isSpace(ch) {\n  return isNonBreakSpace(ch) || isBreakSpace(ch)\n}\n\nfunction isSep(ch) {\n  return ch < 0 || isSpace(ch)\n}\n\nconst indentation = new ContextTracker({\n  start: Context.top,\n  reduce(context, term) {\n    return context.type == type_Flow && (term == FlowSequence || term == FlowMapping) ? context.parent : context\n  },\n  shift(context, term, stack, input) {\n    if (term == sequenceStartMark)\n      return new Context(context, findColumn(input, input.pos), type_Seq)\n    if (term == mapStartMark || term == explicitMapStartMark)\n      return new Context(context, findColumn(input, input.pos), type_Map)\n    if (term == blockEnd)\n      return context.parent\n    if (term == BracketL || term == BraceL)\n      return new Context(context, 0, type_Flow)\n    return context\n  },\n  hash(context) { return context.hash }\n});\n\nfunction three(input, ch, off = 0) {\n  return input.peek(off) == ch && input.peek(off + 1) == ch && input.peek(off + 2) == ch && isSep(input.peek(off + 3))\n}\n\nconst newlines = new ExternalTokenizer((input, stack) => {\n  if (input.next == -1 && stack.canShift(eof))\n    return input.acceptToken(eof)\n  let prev = input.peek(-1);\n  if ((isBreakSpace(prev) || prev < 0) && stack.context.type != type_Flow) {\n    if (three(input, 45 /* '-' */)) {\n      if (stack.canShift(blockEnd)) input.acceptToken(blockEnd);\n      else return input.acceptToken(DirectiveEnd, 3)\n    }\n    if (three(input, 46 /* '.' */)) {\n      if (stack.canShift(blockEnd)) input.acceptToken(blockEnd);\n      else return input.acceptToken(DocEnd, 3)\n    }\n    let depth = 0;\n    while (input.next == 32 /* ' ' */) { depth++; input.advance(); }\n    if ((depth < stack.context.depth ||\n         depth == stack.context.depth && stack.context.type == type_Seq &&\n         (input.next != 45 /* '-' */ || !isSep(input.peek(1)))) &&\n        // Not blank\n        input.next != -1 && !isBreakSpace(input.next) && input.next != 35 /* '#' */)\n      input.acceptToken(blockEnd, -depth);\n  }\n}, {contextual: true});\n\nconst blockMark = new ExternalTokenizer((input, stack) => {\n  if (stack.context.type == type_Flow) {\n    if (input.next == 63 /* '?' */) {\n      input.advance();\n      if (isSep(input.next)) input.acceptToken(flowMapMark);\n    }\n    return\n  }\n  if (input.next == 45 /* '-' */) {\n    input.advance();\n    if (isSep(input.next))\n      input.acceptToken(stack.context.type == type_Seq && stack.context.depth == findColumn(input, input.pos - 1)\n                        ? sequenceContinueMark : sequenceStartMark);\n  } else if (input.next == 63 /* '?' */) {\n    input.advance();\n    if (isSep(input.next))\n      input.acceptToken(stack.context.type == type_Map && stack.context.depth == findColumn(input, input.pos - 1)\n                        ? explicitMapContinueMark : explicitMapStartMark);\n  } else {\n    let start = input.pos;\n    // Scan over a potential key to see if it is followed by a colon.\n    for (;;) {\n      if (isNonBreakSpace(input.next)) {\n        if (input.pos == start) return\n        input.advance();\n      } else if (input.next == 33 /* '!' */) {\n        readTag(input);\n      } else if (input.next == 38 /* '&' */) {\n        readAnchor(input);\n      } else if (input.next == 42 /* '*' */) {\n        readAnchor(input);\n        break\n      } else if (input.next == 39 /* \"'\" */ || input.next == 34 /* '\"' */) {\n        if (readQuoted(input, true)) break\n        return\n      } else if (input.next == 91 /* '[' */ || input.next == 123 /* '{' */) {\n        if (!scanBrackets(input)) return\n        break\n      } else {\n        readPlain(input, true, false, 0);\n        break\n      }\n    }\n    while (isNonBreakSpace(input.next)) input.advance();\n    if (input.next == 58 /* ':' */) {\n      if (input.pos == start && stack.canShift(Colon)) return\n      let after = input.peek(1);\n      if (isSep(after))\n        input.acceptTokenTo(stack.context.type == type_Map && stack.context.depth == findColumn(input, start)\n                            ? mapContinueMark : mapStartMark, start);\n    }\n  }\n}, {contextual: true});\n\nfunction uriChar(ch) {\n  return ch > 32 && ch < 127 && ch != 34 && ch != 37 && ch != 44 && ch != 60 &&\n    ch != 62 && ch != 92 && ch != 94 && ch != 96 && ch != 123 && ch != 124 && ch != 125\n}\n\nfunction hexChar(ch) {\n  return ch >= 48 && ch <= 57 || ch >= 97 && ch <= 102 || ch >= 65 && ch <= 70\n}\n\nfunction readUriChar(input, quoted) {\n  if (input.next == 37 /* '%' */) {\n    input.advance();\n    if (hexChar(input.next)) input.advance();\n    if (hexChar(input.next)) input.advance();\n    return true\n  } else if (uriChar(input.next) || quoted && input.next == 44 /* ',' */) {\n    input.advance();\n    return true\n  }\n  return false\n}\n\nfunction readTag(input) {\n  input.advance(); // !\n  if (input.next == 60 /* '<' */) {\n    input.advance();\n    for (;;) {\n      if (!readUriChar(input, true)) {\n        if (input.next == 62 /* '>' */) input.advance();\n        break\n      }\n    }\n  } else {\n    while (readUriChar(input, false)) {}\n  }\n}\n\nfunction readAnchor(input) {\n  input.advance();\n  while (!isSep(input.next) && charTag(input.tag) != \"f\") input.advance();\n}\n  \nfunction readQuoted(input, scan) {\n  let quote = input.next, lineBreak = false, start = input.pos;\n  input.advance();\n  for (;;) {\n    let ch = input.next;\n    if (ch < 0) break\n    input.advance();\n    if (ch == quote) {\n      if (ch == 39 /* \"'\" */) {\n        if (input.next == 39) input.advance();\n        else break\n      } else {\n        break\n      }\n    } else if (ch == 92 /* \"\\\\\" */ && quote == 34 /* '\"' */) {\n      if (input.next >= 0) input.advance();\n    } else if (isBreakSpace(ch)) {\n      if (scan) return false\n      lineBreak = true;\n    } else if (scan && input.pos >= start + 1024) {\n      return false\n    }\n  }\n  return !lineBreak\n}\n\nfunction scanBrackets(input) {\n  for (let stack = [], end = input.pos + 1024;;) {\n    if (input.next == 91 /* '[' */ || input.next == 123 /* '{' */) {\n      stack.push(input.next);\n      input.advance();\n    } else if (input.next == 39 /* \"'\" */ || input.next == 34 /* '\"' */) {\n      if (!readQuoted(input, true)) return false\n    } else if (input.next == 93 /* ']' */ || input.next == 125 /* '}' */) {\n      if (stack[stack.length - 1] != input.next - 2) return false\n      stack.pop();\n      input.advance();\n      if (!stack.length) return true\n    } else if (input.next < 0 || input.pos > end || isBreakSpace(input.next)) {\n      return false\n    } else {\n      input.advance();\n    }\n  }\n}\n\n// \"Safe char\" info for char codes 33 to 125. s: safe, i: indicator, f: flow indicator\nconst charTable = \"iiisiiissisfissssssssssssisssiiissssssssssssssssssssssssssfsfssissssssssssssssssssssssssssfif\";\n\nfunction charTag(ch) {\n  if (ch < 33) return \"u\"\n  if (ch > 125) return \"s\"\n  return charTable[ch - 33]\n}\n\nfunction isSafe(ch, inFlow) {\n  let tag = charTag(ch);\n  return tag != \"u\" && !(inFlow && tag == \"f\")\n}\n\nfunction readPlain(input, scan, inFlow, indent) {\n  if (charTag(input.next) == \"s\" ||\n      (input.next == 63 /* '?' */ || input.next == 58 /* ':' */ || input.next == 45 /* '-' */) &&\n      isSafe(input.peek(1), inFlow)) {\n    input.advance();\n  } else {\n    return false\n  }\n  let start = input.pos;\n  for (;;) {\n    let next = input.next, off = 0, lineIndent = indent + 1;\n    while (isSpace(next)) {\n      if (isBreakSpace(next)) {\n        if (scan) return false\n        lineIndent = 0;\n      } else {\n        lineIndent++;\n      }\n      next = input.peek(++off);\n    }\n    let safe = next >= 0 &&\n        (next == 58 /* ':' */ ? isSafe(input.peek(off + 1), inFlow) :\n         next == 35 /* '#' */ ? input.peek(off - 1) != 32 /* ' ' */ :\n         isSafe(next, inFlow));\n    if (!safe || !inFlow && lineIndent <= indent ||\n        lineIndent == 0 && !inFlow && (three(input, 45, off) || three(input, 46, off)))\n      break\n    if (scan && charTag(next) == \"f\") return false\n    for (let i = off; i >= 0; i--) input.advance();\n    if (scan && input.pos > start + 1024) return false\n  }\n  return true\n}\n\nconst literals = new ExternalTokenizer((input, stack) => {\n  if (input.next == 33 /* '!' */) {\n    readTag(input);\n    input.acceptToken(Tag);\n  } else if (input.next == 38 /* '&' */ || input.next == 42 /* '*' */) {\n    let token = input.next == 38 ? Anchor : Alias;\n    readAnchor(input);\n    input.acceptToken(token);\n  } else if (input.next == 39 /* \"'\" */ || input.next == 34 /* '\"' */) {\n    readQuoted(input, false);\n    input.acceptToken(QuotedLiteral);\n  } else if (readPlain(input, false, stack.context.type == type_Flow, stack.context.depth)) {\n    input.acceptToken(Literal);\n  }\n});\n\nconst blockLiteral = new ExternalTokenizer((input, stack) => {\n  let indent = -1, upto = input.pos;\n  scan: for (;;) {\n    let depth = 0, next = input.next;\n    while (next == 32 /* ' ' */) next = input.peek(++depth);\n    if (!depth && (three(input, 45, depth) || three(input, 46, depth))) break\n    if (!isBreakSpace(next)) {\n      if (indent < 0) indent = Math.max(stack.context.depth + 1, depth);\n      if (depth < indent) break\n    }\n    for (;;) {\n      if (input.next < 0) break scan\n      let isBreak = isBreakSpace(input.next);\n      input.advance();\n      if (isBreak) continue scan\n      upto = input.pos;\n    }\n  }\n  input.acceptTokenTo(BlockLiteralContent, upto);\n});\n\nconst yamlHighlighting = styleTags({\n  DirectiveName: tags.keyword,\n  DirectiveContent: tags.attributeValue,\n  \"DirectiveEnd DocEnd\": tags.meta,\n  QuotedLiteral: tags.string,\n  BlockLiteralHeader: tags.special(tags.string),\n  BlockLiteralContent: tags.content,\n  Literal: tags.content,\n  \"Key/Literal Key/QuotedLiteral\": tags.definition(tags.propertyName),\n  \"Anchor Alias\": tags.labelName,\n  Tag: tags.typeName,\n  Comment: tags.lineComment,\n  \": , -\": tags.separator,\n  \"?\": tags.punctuation,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"5lQ!ZQgOOO#PQfO'#CpO#uQfO'#DOOOQR'#Dv'#DvO$qQgO'#DRO%gQdO'#DUO%nQgO'#DUO&ROaO'#D[OOQR'#Du'#DuO&{QgO'#D^O'rQgO'#D`OOQR'#Dt'#DtO(iOqO'#DbOOQP'#Dj'#DjO(zQaO'#CmO)YQgO'#CmOOQP'#Cm'#CmQ)jQaOOQ)uQgOOQ]QgOOO*PQdO'#CrO*nQdO'#CtOOQO'#Dw'#DwO+]Q`O'#CxO+hQdO'#CwO+rQ`O'#CwOOQO'#Cv'#CvO+wQdO'#CvOOQO'#Cq'#CqO,UQ`O,59[O,^QfO,59[OOQR,59[,59[OOQO'#Cx'#CxO,eQ`O'#DPO,pQdO'#DPOOQO'#Dx'#DxO,zQdO'#DxO-XQ`O,59jO-aQfO,59jOOQR,59j,59jOOQR'#DS'#DSO-hQcO,59mO-sQgO'#DVO.TQ`O'#DVO.YQcO,59pOOQR'#DX'#DXO#|QfO'#DWO.hQcO'#DWOOQR,59v,59vO.yOWO,59vO/OOaO,59vO/WOaO,59vO/cQgO'#D_OOQR,59x,59xO0VQgO'#DaOOQR,59z,59zOOQP,59|,59|O0yOaO,59|O1ROaO,59|O1aOqO,59|OOQP-E7h-E7hO1oQgO,59XOOQP,59X,59XO2PQaO'#DeO2_QgO'#DeO2oQgO'#DkOOQP'#Dk'#DkQ)jQaOOO3PQdO'#CsOOQO,59^,59^O3kQdO'#CuOOQO,59`,59`OOQO,59c,59cO4VQdO,59cO4aQdO'#CzO4kQ`O'#CzOOQO,59b,59bOOQU,5:Q,5:QOOQR1G.v1G.vO4pQ`O1G.vOOQU-E7d-E7dO4xQdO,59kOOQO,59k,59kO5SQdO'#DQO5^Q`O'#DQOOQO,5:d,5:dOOQU,5:R,5:ROOQR1G/U1G/UO5cQ`O1G/UOOQU-E7e-E7eO5kQgO'#DhO5xQcO1G/XOOQR1G/X1G/XOOQR,59q,59qO6TQgO,59qO6eQdO'#DiO6lQgO'#DiO7PQcO1G/[OOQR1G/[1G/[OOQR,59r,59rO#|QfO,59rOOQR1G/b1G/bO7_OWO1G/bO7dOaO1G/bOOQR,59y,59yOOQR,59{,59{OOQP1G/h1G/hO7lOaO1G/hO7tOaO1G/hO8POaO1G/hOOQP1G.s1G.sO8_QgO,5:POOQP,5:P,5:POOQP,5:V,5:VOOQP-E7i-E7iOOQO,59_,59_OOQO,59a,59aOOQO1G.}1G.}OOQO,59f,59fO8oQdO,59fOOQR7+$b7+$bP,XQ`O'#DfOOQO1G/V1G/VOOQO,59l,59lO8yQdO,59lOOQR7+$p7+$pP9TQ`O'#DgOOQR'#DT'#DTOOQR,5:S,5:SOOQR-E7f-E7fOOQR7+$s7+$sOOQR1G/]1G/]O9YQgO'#DYO9jQ`O'#DYOOQR,5:T,5:TO#|QfO'#DZO9oQcO'#DZOOQR-E7g-E7gOOQR7+$v7+$vOOQR1G/^1G/^OOQR7+$|7+$|O:QOWO7+$|OOQP7+%S7+%SO:VOaO7+%SO:_OaO7+%SOOQP1G/k1G/kOOQO1G/Q1G/QOOQO1G/W1G/WOOQR,59t,59tO:jQgO,59tOOQR,59u,59uO#|QfO,59uOOQR<<Hh<<HhOOQP<<Hn<<HnO:zOaO<<HnOOQR1G/`1G/`OOQR1G/a1G/aOOQPAN>YAN>Y\",\n  stateData: \";S~O!fOS!gOS^OS~OP_OQbORSOTUOWROXROYYOZZO[XOcPOqQO!PVO!V[O!cTO~O`cO~P]OVkOWROXROYeOZfO[dOcPOmhOqQO~OboO~P!bOVtOWROXROYeOZfO[dOcPOmrOqQO~OpwO~P#WORSOTUOWROXROYYOZZO[XOcPOqQO!PVO!cTO~OSvP!avP!bvP~P#|OWROXROYeOZfO[dOcPOqQO~OmzO~P%OOm!OOUzP!azP!bzP!dzP~P#|O^!SO!b!QO!f!TO!g!RO~ORSOTUOWROXROcPOqQO!PVO!cTO~OY!UOP!QXQ!QX!V!QX!`!QXS!QX!a!QX!b!QXU!QXm!QX!d!QX~P&aO[!WOP!SXQ!SX!V!SX!`!SXS!SX!a!SX!b!SXU!SXm!SX!d!SX~P&aO^!ZO!W![O!b!YO!f!]O!g!YO~OP!_O!V[OQaX!`aX~OPaXQaX!VaX!`aX~P#|OP!bOQ!cO!V[O~OP_O!V[O~P#|OWROXROY!fOcPOqQObfXmfXofXpfX~OWROXRO[!hOcPOqQObhXmhXohXphX~ObeXmlXoeX~ObkXokX~P%OOm!kO~Om!lObnPonP~P%OOb!pOo!oO~Ob!pO~P!bOm!sOosXpsX~OosXpsX~P%OOm!uOotPptP~P%OOo!xOp!yO~Op!yO~P#WOS!|O!a#OO!b#OO~OUyX!ayX!byX!dyX~P#|Om#QO~OU#SO!a#UO!b#UO!d#RO~Om#WOUzX!azX!bzX!dzX~O]#XO~O!b#XO!g#YO~O^#ZO!b#XO!g#YO~OP!RXQ!RX!V!RX!`!RXS!RX!a!RX!b!RXU!RXm!RX!d!RX~P&aOP!TXQ!TX!V!TX!`!TXS!TX!a!TX!b!TXU!TXm!TX!d!TX~P&aO!b#^O!g#^O~O^#_O!b#^O!f#`O!g#^O~O^#_O!W#aO!b#^O!g#^O~OPaaQaa!Vaa!`aa~P#|OP#cO!V[OQ!XX!`!XX~OP!XXQ!XX!V!XX!`!XX~P#|OP_O!V[OQ!_X!`!_X~P#|OWROXROcPOqQObgXmgXogXpgX~OWROXROcPOqQObiXmiXoiXpiX~Obkaoka~P%OObnXonX~P%OOm#kO~Ob#lOo!oO~Oosapsa~P%OOotXptX~P%OOm#pO~Oo!xOp#qO~OSwP!awP!bwP~P#|OS!|O!a#vO!b#vO~OUya!aya!bya!dya~P#|Om#xO~P%OOm#{OU}P!a}P!b}P!d}P~P#|OU#SO!a$OO!b$OO!d#RO~O]$QO~O!b$QO!g$RO~O!b$SO!g$SO~O^$TO!b$SO!g$SO~O^$TO!b$SO!f$UO!g$SO~OP!XaQ!Xa!V!Xa!`!Xa~P#|Obnaona~P%OOotapta~P%OOo!xO~OU|X!a|X!b|X!d|X~P#|Om$ZO~Om$]OU}X!a}X!b}X!d}X~O]$^O~O!b$_O!g$_O~O^$`O!b$_O!g$_O~OU|a!a|a!b|a!d|a~P#|O!b$cO!g$cO~O\",\n  goto: \",]!mPPPPPPPPPPPPPPPPP!nPP!v#v#|$`#|$c$f$j$nP%VPPP!v%Y%^%a%{&O%a&R&U&X&_&b%aP&e&{&e'O'RPP']'a'g'm's'y(XPPPPPPPP(_)e*X+c,VUaObcR#e!c!{ROPQSTUXY_bcdehknrtvz!O!U!W!_!b!c!f!h!k!l!s!u!|#Q#R#S#W#c#k#p#x#{$Z$]QmPR!qnqfPQThknrtv!k!l!s!u#R#k#pR!gdR!ieTlPnTjPnSiPnSqQvQ{TQ!mkQ!trQ!vtR#y#RR!nkTsQvR!wt!RWOSUXY_bcz!O!U!W!_!b!c!|#Q#S#W#c#x#{$Z$]RySR#t!|R|TR|UQ!PUR#|#SR#z#RR#z#SyZOSU_bcz!O!_!b!c!|#Q#S#W#c#x#{$Z$]R!VXR!XYa]O^abc!a!c!eT!da!eQnPR!rnQvQR!{vQ!}yR#u!}Q#T|R#}#TW^Obc!cS!^^!aT!aa!eQ!eaR#f!eW`Obc!cQxSS}U#SQ!`_Q#PzQ#V!OQ#b!_Q#d!bQ#s!|Q#w#QQ$P#WQ$V#cQ$Y#xQ$[#{Q$a$ZR$b$]xZOSU_bcz!O!_!b!c!|#Q#S#W#c#x#{$Z$]Q!VXQ!XYQ#[!UR#]!W!QWOSUXY_bcz!O!U!W!_!b!c!|#Q#S#W#c#x#{$Z$]pfPQThknrtv!k!l!s!u#R#k#pQ!gdQ!ieQ#g!fR#h!hSgPn^pQTkrtv#RQ!jhQ#i!kQ#j!lQ#n!sQ#o!uQ$W#kR$X#pQuQR!zv\",\n  nodeNames: \"⚠ DirectiveEnd DocEnd - - ? ? ? Literal QuotedLiteral Anchor Alias Tag BlockLiteralContent Comment Stream BOM Document ] [ FlowSequence Item Tagged Anchored Anchored Tagged FlowMapping Pair Key : Pair , } { FlowMapping Pair Pair BlockSequence Item Item BlockMapping Pair Pair Key Pair Pair BlockLiteral BlockLiteralHeader Tagged Anchored Anchored Tagged Directive DirectiveName DirectiveContent Document\",\n  maxTerm: 74,\n  context: indentation,\n  nodeProps: [\n    [\"isolate\", -3,8,9,14,\"\"],\n    [\"openedBy\", 18,\"[\",32,\"{\"],\n    [\"closedBy\", 19,\"]\",33,\"}\"]\n  ],\n  propSources: [yamlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 6,\n  tokenData: \"-Y~RnOX#PXY$QYZ$]Z]#P]^$]^p#Ppq$Qqs#Pst$btu#Puv$yv|#P|}&e}![#P![!]'O!]!`#P!`!a'i!a!}#P!}#O*g#O#P#P#P#Q+Q#Q#o#P#o#p+k#p#q'i#q#r,U#r;'S#P;'S;=`#z<%l?HT#P?HT?HU,o?HUO#PQ#UU!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#PQ#kTOY#PZs#Pt;'S#P;'S;=`#z<%lO#PQ#}P;=`<%l#P~$VQ!f~XY$Qpq$Q~$bO!g~~$gS^~OY$bZ;'S$b;'S;=`$s<%lO$b~$vP;=`<%l$bR%OX!WQOX%kXY#PZ]%k]^#P^p%kpq#hq;'S%k;'S;=`&_<%lO%kR%rX!WQ!VPOX%kXY#PZ]%k]^#P^p%kpq#hq;'S%k;'S;=`&_<%lO%kR&bP;=`<%l%kR&lUoP!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#PR'VUmP!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#PR'p[!PP!WQOY#PZp#Ppq#hq{#P{|(f|}#P}!O(f!O!R#P!R![)p![;'S#P;'S;=`#z<%lO#PR(mW!PP!WQOY#PZp#Ppq#hq!R#P!R![)V![;'S#P;'S;=`#z<%lO#PR)^U!PP!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#PR)wY!PP!WQOY#PZp#Ppq#hq{#P{|)V|}#P}!O)V!O;'S#P;'S;=`#z<%lO#PR*nUcP!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#PR+XUbP!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#PR+rUqP!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#PR,]UpP!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#PR,vU`P!WQOY#PZp#Ppq#hq;'S#P;'S;=`#z<%lO#P\",\n  tokenizers: [newlines, blockMark, literals, blockLiteral, 0, 1],\n  topRules: {\"Stream\":[0,15]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/yaml';\nimport { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nA language provider based on the [Lezer YAML\nparser](https://github.com/lezer-parser/yaml), extended with\nhighlighting and indentation information.\n*/\nconst yamlLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"yaml\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Stream: cx => {\n                    for (let before = cx.node.resolve(cx.pos, -1); before && before.to >= cx.pos; before = before.parent) {\n                        if (before.name == \"BlockLiteralContent\" && before.from < before.to)\n                            return cx.baseIndentFor(before);\n                        if (before.name == \"BlockLiteral\")\n                            return cx.baseIndentFor(before) + cx.unit;\n                        if (before.name == \"BlockSequence\" || before.name == \"BlockMapping\")\n                            return cx.column(before.from, 1);\n                        if (before.name == \"QuotedLiteral\")\n                            return null;\n                        if (before.name == \"Literal\") {\n                            let col = cx.column(before.from, 1);\n                            if (col == cx.lineIndent(before.from, 1))\n                                return col; // Start on own line\n                            if (before.to > cx.pos)\n                                return null;\n                        }\n                    }\n                    return null;\n                },\n                FlowMapping: /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                FlowSequence: /*@__PURE__*/delimitedIndent({ closing: \"]\" }),\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"FlowMapping FlowSequence\": foldInside,\n                \"BlockSequence BlockMapping BlockLiteral\": (node, state) => ({ from: state.doc.lineAt(node.from).to, to: node.to })\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { line: \"#\" },\n        indentOnInput: /^\\s*[\\]\\}]$/,\n    }\n});\n/**\nLanguage support for YAML.\n*/\nfunction yaml() {\n    return new LanguageSupport(yamlLanguage);\n}\n\nexport { yaml, yamlLanguage };\n"],"names":["blockEnd","eof","DirectiveEnd","DocEnd","sequenceStartMark","sequenceContinueMark","explicitMapStartMark","explicitMapContinueMark","flowMapMark","mapStartMark","mapContinueMark","Literal","QuotedLiteral","Anchor","Alias","Tag","BlockLiteralContent","BracketL","FlowSequence","Colon","BraceL","FlowMapping","type_Top","type_Seq","type_Map","type_Flow","Context","constructor","parent","depth","type","this","hash","findColumn","input","pos","col","p","ch","peek","isBreakSpace","isNonBreakSpace","isSpace","isSep","indentation","ContextTracker","start","top","reduce","context","term","shift","stack","three","off","newlines","ExternalTokenizer","next","canShift","acceptToken","prev","advance","contextual","blockMark","readTag","readAnchor","readQuoted","scanBrackets","readPlain","after","acceptTokenTo","uriChar","hexChar","readUriChar","quoted","charTag","tag","scan","quote","lineBreak","end","push","length","pop","charTable","isSafe","inFlow","indent","lineIndent","safe","i","literals","token","blockLiteral","upto","Math","max","isBreak","yamlHighlighting","styleTags","DirectiveName","tags","DirectiveContent","BlockLiteralHeader","Comment","parser","LRParser","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","yamlLanguage","LRLanguage","name","configure","props","indentNodeProp","Stream","cx","before","node","resolve","to","from","baseIndentFor","unit","column","delimitedIndent","closing","foldNodeProp","foldInside","state","doc","lineAt","languageData","commentTokens","line","indentOnInput","yaml","LanguageSupport"],"sourceRoot":""}