{"version":3,"file":"js/6599.a9895bc2.js","mappings":"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","sources":["webpack://my-portfolio/./node_modules/vue-loader/dist/templateLoader.js","webpack://my-portfolio/./node_modules/vue-loader/dist/index.js","webpack://my-portfolio/./src/components/apps/audioItem/AudioAnalyzer.vue"],"sourcesContent":["import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2b42a2b2\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = {\n  id: \"canvas-audio\",\n  ref: \"canvasRef\",\n  class: \"audio-canvas\"\n}\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"canvas\", _hoisted_1, null, 512))\n}","\r\nimport { defineComponent, onMounted, PropType, ref } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  props: {\r\n    audioElement: Object as PropType<HTMLAudioElement>,\r\n  },\r\n  components: {},\r\n  emits: [],\r\n  setup(props, _) {\r\n    const canvasRef = ref<HTMLCanvasElement>();\r\n\r\n    const analyzer = ref<AnalyserNode | null>(null);\r\n    const audioCtx = ref(new window.AudioContext());\r\n\r\n    function animate() {\r\n      if (canvasRef.value && analyzer.value) {\r\n        const bufferLength = analyzer.value.frequencyBinCount;\r\n        const dataArray = new Uint8Array(bufferLength);\r\n\r\n        const ctx = canvasRef.value.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        ctx?.clearRect(0, 0, canvasRef.value.width, canvasRef.value.height);\r\n\r\n        analyzer.value?.getByteFrequencyData(dataArray);\r\n\r\n        drawVisualizer(bufferLength, dataArray, ctx, canvasRef.value);\r\n      }\r\n\r\n      requestAnimationFrame(animate);\r\n    }\r\n\r\n    const drawVisualizer = (\r\n      bufferLength: number,\r\n      dataArray: Uint8Array,\r\n\r\n      ctx: CanvasRenderingContext2D,\r\n      canvas: HTMLCanvasElement\r\n    ) => {\r\n      const style = getComputedStyle(document.body);\r\n      ctx.fillStyle = style.getPropertyValue(\"--font-color\");\r\n\r\n      let barHeight;\r\n      const barWidth = canvas.width / 2 / bufferLength;\r\n      let firstX = 0;\r\n      let secondX = bufferLength * barWidth;\r\n\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      fixDpi();\r\n\r\n      const maxDataArrayValue = 255;\r\n\r\n      for (let i = 0; i < bufferLength; i++) {\r\n        barHeight = (dataArray[i] / maxDataArrayValue) * canvas.height;\r\n        // const red = (i * barHeight) / 10;\r\n        // const green = i * 4;\r\n        // const blue = barHeight / 4 - 12;\r\n\r\n        roundRect(ctx, canvas.width / 2 - firstX, (canvas.height - barHeight) / 2, barWidth / 1.7, barHeight, 30);\r\n        roundRect(ctx, secondX, (canvas.height - barHeight) / 2, barWidth / 1.7, barHeight, 30);\r\n\r\n        //ctx.fillRect(canvas.width / 2 - firstX, canvas.height - barHeight, barWidth - 1, barHeight);\r\n        firstX += barWidth;\r\n        //ctx.fillRect(secondX, canvas.height - barHeight, barWidth - 1, barHeight);\r\n        secondX += barWidth;\r\n      }\r\n    };\r\n\r\n    const fixDpi = () => {\r\n      const dpi = window.devicePixelRatio;\r\n\r\n      if (canvasRef.value) {\r\n        const height = +getComputedStyle(canvasRef.value).getPropertyValue(\"height\").slice(0, -2);\r\n        //get CSS width\r\n        const width = +getComputedStyle(canvasRef.value).getPropertyValue(\"width\").slice(0, -2);\r\n        //scale the canvas\r\n        canvasRef.value.setAttribute(\"height\", (height * dpi).toString());\r\n        canvasRef.value.setAttribute(\"width\", (width * dpi).toString());\r\n      }\r\n    };\r\n\r\n    const roundRect = function (\r\n      ctx: CanvasRenderingContext2D,\r\n      x: number,\r\n      y: number,\r\n      width: number,\r\n      height: number,\r\n      radius: number\r\n    ) {\r\n      if (width < 2 * radius) {\r\n        radius = width / 2;\r\n      }\r\n      if (height < 2 * radius) {\r\n        radius = height / 2;\r\n      }\r\n      const color = getComputedStyle(document.body).getPropertyValue(\"--font-color\");\r\n\r\n      ctx.fillStyle = color;\r\n      ctx.beginPath();\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.arcTo(x + width, y, x + width, y + height, radius);\r\n      ctx.arcTo(x + width, y + height, x, y + height, radius);\r\n      ctx.arcTo(x, y + height, x, y, radius);\r\n      ctx.arcTo(x, y, x + width, y, radius);\r\n      ctx.closePath();\r\n\r\n      ctx.fill();\r\n    };\r\n\r\n    const setAnalyzer = () => {\r\n      console.log(\"set analyzer\", props.audioElement);\r\n      if (props.audioElement && canvasRef.value) {\r\n        const mediaElement = audioCtx.value.createMediaElementSource(props.audioElement);\r\n\r\n        analyzer.value = audioCtx.value.createAnalyser();\r\n\r\n        mediaElement.connect(analyzer.value);\r\n        analyzer.value.connect(audioCtx.value.destination);\r\n\r\n        analyzer.value.smoothingTimeConstant = 0.9;\r\n        analyzer.value.fftSize = 32;\r\n\r\n        animate();\r\n      }\r\n    };\r\n\r\n    onMounted(async () => {\r\n      console.log(\"SETTING AN\");\r\n      setAnalyzer();\r\n    });\r\n\r\n    return { canvasRef };\r\n  },\r\n});\r\n","import { render } from \"./AudioAnalyzer.vue?vue&type=template&id=2b42a2b2&scoped=true&ts=true\"\nimport script from \"./AudioAnalyzer.vue?vue&type=script&lang=ts\"\nexport * from \"./AudioAnalyzer.vue?vue&type=script&lang=ts\"\n\nimport \"./AudioAnalyzer.vue?vue&type=style&index=0&id=2b42a2b2&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Stefano\\\\coding\\\\desktop-web\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2b42a2b2\"]])\n\nexport default __exports__"],"names":["_hoisted_1","id","ref","class","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","defineComponent","props","audioElement","Object","components","emits","setup","_","canvasRef","analyzer","audioCtx","window","AudioContext","animate","value","bufferLength","frequencyBinCount","dataArray","Uint8Array","ctx","getContext","clearRect","width","height","getByteFrequencyData","drawVisualizer","requestAnimationFrame","canvas","style","getComputedStyle","document","body","barHeight","fillStyle","getPropertyValue","barWidth","firstX","secondX","fixDpi","maxDataArrayValue","i","roundRect","dpi","devicePixelRatio","slice","setAttribute","toString","x","y","radius","color","beginPath","moveTo","arcTo","closePath","fill","setAnalyzer","console","log","mediaElement","createMediaElementSource","createAnalyser","connect","destination","smoothingTimeConstant","fftSize","onMounted","__exports__"],"sourceRoot":""}